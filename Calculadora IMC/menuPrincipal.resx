<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImc.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>